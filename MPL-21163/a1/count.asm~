section .data
global arr 
arr db 11H,33H,44H,55H,(-65)H
global count
count db 0

section .text
global _start   ;must be declared for linker (ld)
	
_start:
		mov eax, 5 			;no of elements
		mov ebx, 0				;+ve number count
		mov ecx, arr			;access elements
loop:
		add ecx, 0H			;rotate left through carry
		jc pos				;jump if -ve
		inc ebx				;+ve count
		
pos:		dec eax				;iteration
		jnz loop				;on complete ignore
	
done: 
		   add   ebx, '0'
		   mov  [count], ebx

display:

		   mov  edx,1    			;message length
		   mov  ecx, count   		;message to write
		   mov  ebx, 1     			;file descriptor (stdout)
		   mov  eax, 4     			;system call number (sys_write)
		   int  80H      			;call kernel
	
		   mov  eax, 1     			;system call number (sys_exit)
		   int  80H      			;call kernel	


